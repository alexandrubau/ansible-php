---
- name: Add php repository
  apt_repository:
    repo: "{{ _php_repository }}"

- name: Install packages
  apt:
    name: "{{ _php_packages }}"

- name: Install fpm packages
  apt:
    name: "{{ _php_fpm_packages }}"
  when: php_fpm == true

- name: Install extension packages
  apt:
    name: "{{ _php_ext_packages }}"

- name: Install apache packages
  apt:
    name: "{{ _php_apache_packages }}"
  when: _apache_role is defined

- name: Configure cli ini file
  ini_file:
    path: /etc/php/{{ php_version }}/cli/php.ini
    section: "{{ item.section | default('PHP') }}"
    option: "{{ item.name }}"
    value: "{{ item.value }}"
    state: "{{ 'absent' if item.remove is defined and item.remove == true else 'present' }}"
  with_items: "{{ php_cli_ini }}"

- name: Configure apache ini file
  ini_file:
    path: /etc/php/{{ php_version }}/apache2/php.ini
    section: "{{ item.section | default('PHP') }}"
    option: "{{ item.name }}"
    value: "{{ item.value }}"
    state: "{{ 'absent' if item.remove is defined and item.remove == true else 'present' }}"
  with_items: "{{ php_apache_ini }}"
  when: _apache_role is defined

- name: Configure fpm ini file
  ini_file:
    path: /etc/php/{{ php_version }}/fpm/php.ini
    section: "{{ item.section | default('PHP') }}"
    option: "{{ item.name }}"
    value: "{{ item.value }}"
    state: "{{ 'absent' if item.remove is defined and item.remove == true else 'present' }}"
  with_items: "{{ php_fpm_ini }}"
  when: php_fpm == true
  notify: restart-phpfpm

- name: Configure fpm service ini file
  ini_file:
    path: /etc/php/{{ php_version }}/fpm/php-fpm.ini
    section: "{{ item.section | default('global') }}"
    option: "{{ item.name }}"
    value: "{{ item.value }}"
    state: "{{ 'absent' if item.remove is defined and item.remove == true else 'present' }}"
  with_items: "{{ php_fpm_service_ini }}"
  when: php_fpm == true
  notify: restart-phpfpm

- name: Ensure fpm pool config files exist
  copy:
    src: /etc/php/{{ php_version }}/fpm/pool.d/www.conf
    dest: /etc/php/{{ php_version }}/fpm/pool.d/{{ item.name }}.conf
    remote_src: yes
  with_items: "{{ php_fpm_pools }}"
  when: php_fpm == true
  notify: restart-phpfpm

- name: Configure fpm pool file
  ini_file:
    path: /etc/php/{{ php_version }}/fpm/pool.d/{{ item[0].name }}.conf
    section: "{{ item.section | default(item[0].name) }}"
    option: "{{ item[1].name }}"
    value: "{{ item[1].value }}"
    state: "{{ 'absent' if item[1].remove is defined and item[1].remove == true else 'present' }}"
  with_subelements: 
    - "{{ php_fpm_pools }}"
    - conf
  when: php_fpm == true
  notify: restart-phpfpm

- name: Install xdebug
  apt:
    name: php{{ php_version }}-xdebug
  when: php_env != 'prod'

- name: Enable xdebug
  shell: phpenmod xdebug
  register: _output
  changed_when: "'Enabling module xdebug' in _output.stdout"
  when: php_env != 'prod'

- name: Update xdebug config file
  blockinfile:
    path: /etc/php/{{ php_version }}/mods-available/xdebug.ini
    insertafter: EOF
    block: |
      xdebug.remote_enable=1
      xdebug.remote_connect_back=1
  when: php_env != 'prod'
  notify: 
    - restart-webserver
    - restart-phpfpm

- name: Check if composer is installed
  stat:
    path: /usr/local/bin/composer
  register: _php_composer_info

- name: Download composer installer
  get_url:
    url: "{{ _php_composer_download_url }}"
    dest: /tmp/composer-installer.php
  when: not _php_composer_info.stat.exists

- name: Install composer
  shell: php /tmp/composer-installer.php --install-dir="/usr/local/bin" --filename="composer"
  when: not _php_composer_info.stat.exists

- name: Delete composer installer
  file:
    path: /tmp/composer-installer.php
    state: absent
  when: not _php_composer_info.stat.exists

- name: Check if phpunit is installed
  stat:
    path: /usr/local/bin/phpunit
  register: _php_phpunit_info

- name: Download phpunit
  get_url:
    url: "{{ _php_phpunit_download_url }}"
    dest: /usr/local/bin/phpunit
  when: not _php_phpunit_info.stat.exists

- name: Set permissions for phpunit
  file:
    path: /usr/local/bin/phpunit
    mode: 0755
  when: not _php_phpunit_info.stat.exists

- name: Start service
  service:
    name: "{{ _php_service }}"
    state: started
    enabled: yes
  when: php_fpm == true